import {addComment} from "@/firebase/admin"
import {siteUrl} from "@/shared/constants"
import {Subject} from "@/shared/types"
import {getAuth} from "firebase-admin/auth"
import {CommentList} from "./CommentList"

export function CommentApp({
  slug,
  subject,
  title,
}: {
  slug: string
  subject: Subject
  title: string
}) {
  async function saveComment(formData: FormData) {
    "use server"
    const id = formData.get("userId")?.toString() ?? ""
    const text = formData.get("comment")?.toString().trim() ?? ""
    const user = id && text ? await getAuth().getUser(id) : null
    if (user) {
      const {displayName, email, photoURL, uid} = user
      await addComment({
        slug,
        subject,
        text,
        user: {displayName, email, photoURL, uid},
      })
      transporter.sendMail({
        from: process.env.NODEMAILER_EMAIL,
        html: `
          <p>${text}</p>
          <p>${siteUrl}/posts/${slug}</p>
          <p>${email}</p>
          <p>ðŸš¨ðŸš¨ This is an autogenerated email from an unmonitored mailbox, please do not reply ðŸš¨ðŸš¨</p>
        `,
        subject: `${displayName} commented on ${title}`,
        to:
          process.env.NODE_ENV === "production"
            ? "monismargaret@gmail.com"
            : "mmonis77@gmail.com",
      })
    }
  }
  return <CommentList {...{saveComment, slug}} />
}

const nodemailer = require("nodemailer")
const transporter = nodemailer.createTransport({
  auth: {
    pass: process.env.NODEMAILER_PASSWORD,
    user: process.env.NODEMAILER_EMAIL,
  },
  service: "gmail",
})
